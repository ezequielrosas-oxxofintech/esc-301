# ------------------- SERVICE OLD-NAMESPACE (TO BE REMOVED) ------------------- #
kind: Service
apiVersion: v1
metadata:
  namespace: ${STAGE}-${APP_NAME}
  labels:
    app: ${APP_NAME}
    stage: ${STAGE}
  annotations:
    # by default the type is elb (classic load balancer).
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    # service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    # service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ${ALB_POS_ISO_ACM_ARN}
  name: ${APP_NAME}
spec:
  ports:
    - port: 9106
      targetPort: 9106
      name: controller
  selector:
    app: ${APP_NAME}
  type: LoadBalancer
---
# ------------------- SERVICE ------------------- #
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
  labels:
    app: ${APP_NAME}
    stage: ${STAGE}
spec:
  ports:
    - name: http
      port: 80
      targetPort: 9106
    - name: https
      port: 443
      targetPort: 9106
  type: NodePort
  selector:
    app: ${APP_NAME}
---
# ------------------- HPA OLD-NAMESPACE (TO BE REMOVED) ------------------- #
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ${APP_NAME}
  namespace: ${STAGE}-${APP_NAME}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ${APP_NAME}
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50

---
# ------------------- HPA ------------------- #
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ${APP_NAME}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ${APP_NAME}
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50

---
# ------------------- SERVICE ACCOUNT OLD-NAMESPACE (TO BE REMOVED) ------------------- #
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: ${STAGE}-${APP_NAME}
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${STAGE}-eks-${APP_NAME}"
  labels:
    app.kubernetes.io/name: ${APP_NAME}
  name: ${APP_NAME}

---
# ------------------- SERVICE ACCOUNT ------------------- #
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${STAGE}-eks-${APP_NAME}"
  labels:
    app.kubernetes.io/name: ${APP_NAME}
  name: ${APP_NAME}

---
# ------------------- CLUSTER ROLE BINDING OLD-NAMESPACE (TO BE REMOVED) ------------------- #

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ${APP_NAME}-fluentd-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd-spring
subjects:
  - kind: ServiceAccount
    name: ${APP_NAME}
    namespace: ${STAGE}-${APP_NAME}

---
# ------------------- CLUSTER ROLE BINDING ------------------- #

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ${APP_NAME}-fluent-bit-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd-spring
subjects:
  - kind: ServiceAccount
    name: ${APP_NAME}
    namespace: ${STAGE}

---
# ------------------- DEPLOYMENT OLD-NAMESPACE (TO BE REMOVED) ------------------- #

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ${STAGE}-${APP_NAME}
  name: ${APP_NAME}
  labels:
    app: ${APP_NAME}
spec:
  replicas: 1
  revisionHistoryLimit: 14
  minReadySeconds: 30
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      app: ${APP_NAME}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubernetes.io/change-cause: Build 123
      labels:
        app: ${APP_NAME}
    spec:
      serviceAccountName: ${APP_NAME}
      volumes:
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: app-logs
          emptyDir: {}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: eks.amazonaws.com/nodegroup
                    operator: In
                    values:
                      - oxxo-deposit-service-g1
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
        - image: ${IMAGE_TAG}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/log/containers
              name: app-logs
          name: ${APP_NAME}
          livenessProbe:
            httpGet:
              path: /${APP_NAME}/actuator/health
              port: 9106
            initialDelaySeconds: 50
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /${APP_NAME}/actuator/health
              port: 9106
            initialDelaySeconds: 50
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 60
          resources:
            requests:
              cpu: ${APP_RESOURCES_CPU_REQUEST}
              memory: ${APP_RESOURCES_MEMORY_REQUEST}
            limits:
              memory: ${APP_RESOURCES_MEMORY_LIMIT}
          ports:
            - containerPort: 9106
              protocol: TCP
          env:
            - name: ENV
              value: ${STAGE}
            - name: PROFILES_LABEL
              value: ${STAGE}
            - name: BUILD_HASH
              value: abc
            - name: MONGODB_READ_PREFERENCE
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: mongodb-read-preference
                  optional: true
            - name: MONGODB_URI_OXXO_DEPOSIT
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: mongodb-oxxo-deposit-uri
            - name: AWS_COGNITO_JWKS
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: aws-cognito-jwks
            - name: AWS_COGNITO_OAUTH2_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: aws-cognito-oauth-token-url
            - name: AWS_COGNITO_OAUTH2_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: aws-cognito-oauth-token-client-id
                  optional: true
            - name: AWS_COGNITO_OAUTH2_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: aws-cognito-oauth-token-client-secret
                  optional: true
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: aws-region
            - name: KINESIS_STREAM_PAYMENT_TRANSACTION_NAME
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: kinesis-stream-payment-transaction-name
            - name: ACCOUNT_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: account-service-base-url
            - name: USER_INQUIRY_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: user-inquiry-service-base-url
            - name: PRICING_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: pricing-service-base-url
            - name: TRANSACTION_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: transaction-service-base-url
            - name: SPRING_REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-host
            - name: SPRING_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-port
            - name: PAGOPOP_SERVICE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: pagopop-service-api-key
            - name: PAGOPOP_SERVICE_ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: pagopop-service-admin-api-key
            - name: OXXO_STORE_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: oxxo-store-service-base-url
            - name: TREND_AP_KEY
              valueFrom:
                secretKeyRef:
                  name: trend-micron
                  key: key-spin-pos-services
            - name: TREND_AP_SECRET
              valueFrom:
                secretKeyRef:
                  name: trend-micron
                  key: secret-spin-pos-services
            - name: SECURITY_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: security-service-base-url
            - name: DEFAULT_TIMEOUT
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: default-timeout
                  optional: true
            - name: TRANSACTION_SERVICE_TIMEOUT
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: transaction-service-timeout
                  optional: true
            - name: FEATURE_CONFIGCAT_APIKEY
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: configcat-apikey
            - name: FEATURE_CONFIGCAT_ENABLED
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: configcat-enabled
            - name: FEATURE_CONFIGCAT_MEMORY_MAP
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: configcat-memory-map
                  optional: true
            - name: FEATURE_CACHE_ENABLED
              valueFrom:
                secretKeyRef:
                  name: feature-flags
                  key: feature-cache-enabled
            - name: FEATURE_CACHE_MINUTES
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: feature-cache-minutes
                  optional: true
        - name: logrotate
          image: ${LOGROTATE_IMAGE}
          securityContext:
            runAsUser: 0
          resources:
            requests:
              cpu: ${LOGROTATE_RESOURCES_CPU_REQUEST}
              memory: ${LOGROTATE_RESOURCES_MEMORY_REQUEST}
            limits:
              cpu: ${LOGROTATE_RESOURCES_CPU_LIMIT}
              memory: ${LOGROTATE_RESOURCES_MEMORY_LIMIT}            
          volumeMounts:
            - mountPath: /var/log/containers
              name: app-logs
          env:
            - name: CRON_EXPR
              value: "*/15 * * * *"
            - name: LOGROTATE_LOGFILES
              value: "/var/log/containers/*.log"
            - name: LOGROTATE_FILESIZE
              value: "50M"
            - name: LOGROTATE_FILENUM
              value: "5"
        - name: fluent-bit
          image: ${FLUENT_BIT_IMAGE}
          securityContext:
            runAsUser: 0
          env:
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: aws-region
            - name: CLUSTER_NAME
              value: ${STAGE}-eks-master-cluster
            - name: HTTP_SERVER
              value: "On"
            - name: HTTP_PORT
              value: "2020"
            - name: READ_FROM_HEAD
              value: "true"
            - name: READ_FROM_TAIL
              value: "true"
            - name: APP_NAME
              value: ${APP_NAME}
            - name: STAGE
              value: ${STAGE}
            - name: CI_VERSION
              value: "k8s/1.3.9"
          resources:
            limits:
              cpu: ${FLUENT_BIT_RESOURCES_CPU_LIMIT}
              memory: ${FLUENT_BIT_RESOURCES_MEMORY_LIMIT}
            requests:
              cpu: ${FLUENT_BIT_RESOURCES_CPU_REQUEST}
              memory: ${FLUENT_BIT_RESOURCES_MEMORY_REQUEST}
          volumeMounts:
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc/
            - name: app-logs
              mountPath: /var/log/containers

---
# ------------------- DEPLOYMENT ------------------- #

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  labels:
    app: ${APP_NAME}
spec:
  replicas: 1
  revisionHistoryLimit: 14
  minReadySeconds: 30
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      app: ${APP_NAME}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubernetes.io/change-cause: Build ${BUILD_SHA}
      labels:
        app: ${APP_NAME}
    spec:
      serviceAccountName: ${APP_NAME}
      volumes:
        - name: fluent-bit-config
          configMap:
            name: fluent-bit-config
        - name: app-logs
          emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
      containers:
        - image: ${IMAGE_TAG}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /var/log/containers
              name: app-logs
          name: ${APP_NAME}
          livenessProbe:
            httpGet:
              path: /${APP_NAME}/actuator/health
              port: 9106
            initialDelaySeconds: 50
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /${APP_NAME}/actuator/health
              port: 9106
            initialDelaySeconds: 50
            timeoutSeconds: 2
            periodSeconds: 5
            failureThreshold: 60
          resources:
            requests:
              cpu: ${APP_RESOURCES_CPU_REQUEST}
              memory: ${APP_RESOURCES_MEMORY_REQUEST}
            limits:
              memory: ${APP_RESOURCES_MEMORY_LIMIT}
          ports:
            - containerPort: 9106
              protocol: TCP
          env:
            - name: ENV
              value: ${STAGE}
            - name: PROFILES_LABEL
              value: ${STAGE}
            - name: BUILD_HASH
              value: abc
            - name: MONGODB_READ_PREFERENCE
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: mongodb-read-preference
                  optional: true
            - name: MONGODB_URI_OXXO_DEPOSIT
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: mongodb-oxxo-deposit-uri
            - name: AWS_COGNITO_JWKS
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: aws-cognito-jwks
            - name: AWS_COGNITO_OAUTH2_TOKEN_URL
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: aws-cognito-oauth-token-url
            - name: AWS_COGNITO_OAUTH2_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: aws-cognito-oauth-token-client-id
                  optional: true
            - name: AWS_COGNITO_OAUTH2_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: aws-cognito-oauth-token-client-secret
                  optional: true
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: aws-region
            - name: KINESIS_STREAM_PAYMENT_TRANSACTION_NAME
              valueFrom:
                secretKeyRef:
                  name: kinesis
                  key: kinesis-stream-payment-transaction-name
            - name: ACCOUNT_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: account-service-base-url
            - name: USER_INQUIRY_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: user-inquiry-service-base-url
            - name: PRICING_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: pricing-service-base-url
            - name: TRANSACTION_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: transaction-service-base-url
            - name: SPRING_REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-host
            - name: SPRING_REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-port
            - name: PAGOPOP_SERVICE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: pagopop-service-api-key
            - name: PAGOPOP_SERVICE_ADMIN_API_KEY
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: pagopop-service-admin-api-key
            - name: OXXO_STORE_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: oxxo-store-service-base-url
            - name: TREND_AP_KEY
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: key-spin-pos-services
            - name: TREND_AP_SECRET
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: secret-spin-pos-services
            - name: SECURITY_SERVICE_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: security-service-base-url
            - name: DEFAULT_TIMEOUT
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: default-timeout
                  optional: true
            - name: TRANSACTION_SERVICE_TIMEOUT
              valueFrom:
                secretKeyRef:
                  name: oxxo-deposit-service
                  key: transaction-service-timeout
                  optional: true
            - name: FEATURE_CONFIGCAT_APIKEY
              valueFrom:
                secretKeyRef:
                  name: feature-flags
                  key: configcat-apikey
            - name: FEATURE_CONFIGCAT_ENABLED
              valueFrom:
                secretKeyRef:
                  name: feature-flags
                  key: configcat-enabled
            - name: FEATURE_CONFIGCAT_MEMORY_MAP
              valueFrom:
                secretKeyRef:
                  name: feature-flags
                  key: configcat-memory-map
                  optional: true
            - name: FEATURE_CACHE_ENABLED
              valueFrom:
                secretKeyRef:
                  name: feature-flags
                  key: feature-cache-enabled
            - name: FEATURE_CACHE_MINUTES
              valueFrom:
                secretKeyRef:
                  name: feature-flags
                  key: feature-cache-minutes
                  optional: true
        - name: logrotate
          image: realz/logrotate
          securityContext:
            runAsUser: 0
          resources:
            requests:
              cpu: ${LOGROTATE_RESOURCES_CPU_REQUEST}
              memory: ${LOGROTATE_RESOURCES_MEMORY_REQUEST}
            limits:
              cpu: ${LOGROTATE_RESOURCES_CPU_LIMIT}
              memory: ${LOGROTATE_RESOURCES_MEMORY_LIMIT}
          volumeMounts:
            - mountPath: /var/log/containers
              name: app-logs
          env:
            - name: CRON_EXPR
              value: "*/15 * * * *"
            - name: LOGROTATE_LOGFILES
              value: "/var/log/containers/*.log"
            - name: LOGROTATE_FILESIZE
              value: "50M"
            - name: LOGROTATE_FILENUM
              value: "5"
        - name: fluent-bit
          image: amazon/aws-for-fluent-bit:2.23.0
          securityContext:
            runAsUser: 0
          env:
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: pagopop
                  key: aws-region
            - name: CLUSTER_NAME
              value: ${STAGE}-eks-master-cluster
            - name: HTTP_SERVER
              value: "On"
            - name: HTTP_PORT
              value: "2020"
            - name: READ_FROM_HEAD
              value: "true"
            - name: READ_FROM_TAIL
              value: "true"
            - name: APP_NAME
              value: ${APP_NAME}
            - name: STAGE
              value: ${STAGE}
            - name: CI_VERSION
              value: "k8s/1.3.9"
          resources:
            limits:
              cpu: ${FLUENT_BIT_RESOURCES_CPU_LIMIT}
              memory: ${FLUENT_BIT_RESOURCES_MEMORY_LIMIT}
            requests:
              cpu: ${FLUENT_BIT_RESOURCES_CPU_REQUEST}
              memory: ${FLUENT_BIT_RESOURCES_MEMORY_REQUEST}
          volumeMounts:
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc/
            - name: app-logs
              mountPath: /var/log/containers
